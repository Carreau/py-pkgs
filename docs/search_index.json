[
["index.html", "Python packages 1 Preface", " Python packages Tiffany Timbers 2020-02-11 1 Preface This book is aimed at Python intermediate users who want to package up their code to share it with their collaborators (including their future selves) and the wider Python community. It’s scope and intent is inspired by the R packages book written by Hadley Wickham and Jenny Bryan. "],
["setup.html", "2 System setup 2.1 Installing and updating Python 2.2 Setting up the RStudio IDE with Python", " 2 System setup 2.1 Installing and updating Python In order to start off on a good footing, we recommend you follow these system set-up instructions so you will run into fewer technical issues (compared to not using the same system this book was designed for). We recommend installing Python 3.7 via the Anaconda distribution, following the instructions here: https://docs.anaconda.com/anaconda/install/. If you already have installed this distribution, ensure Python, and the conda package manager is up to date by running the following commands: conda update --all Next, use conda to install Python poetry - a python package that will help us more efficiently build our Python packages: conda install -c conda-forge poetry 2.2 Setting up the RStudio IDE with Python This book will use the RStudio integrated development environment (IDE) to develop packages, although any Python IDE should work. Note - we do this because in the UBC Master of Data Science program we use both the R and Python programming languages and prefer to use an IDE that works well with both. If you would like to use the RStudio IDE we recommend installing the most recent version of the IDE from the preview site: https://rstudio.com/products/rstudio/download/preview/ and then installing R from CRAN, and the reticulate R package via install.package(\"reticulate\") from the R console inside RStudio. When installing reticulate, you will be prompted to install miniconda, if you have already installed the Anaconda distribution of Python, answer “no” to installing miniconda at this prompt. 2.2.1 Find where Anaconda is installed on your machine 2.2.1.1 Mac OS &amp; Linux In terminal, type: which Python 2.2.1.2 Windows In the Anaconda Prompt type: where python. 2.2.2 Configuring reticulate for to use the Python REPL inside RStudio Create a file named .Rprofile in your $HOME directory that contains the following: Sys.setenv(RETICULATE_PYTHON = &quot;path_to_the_folder_containing_anaconda&#39;s_python&quot;) For me the \"path_to_the_folder_containing_anaconda's_python\" was '//anaconda3/bin/'. Restart RStudio for this to take effect. 2.2.3 Configuring the RStudio terminal 2.2.3.1 Mac OS &amp; Linux Open (or create) the file called .bash_profile in your $HOME directory and add the following to the last line of that file: export PATH=&quot;path_to_the_folder_containing_anaconda&#39;s_python:$PATH&quot; For me that line is export PATH=\"//anaconda3/bin:$PATH\". Restart RStudio for this to take effect. 2.2.3.2 Windows The default terminal in RStudio on Windows is PowerShell. This causes some unexpected problems as its not a true bash shell. You should change this using the following menu selections inside RStudio: Global Options -&gt; Terminal -&gt; Shell -&gt; Git Bash "],
["the-whole-game.html", "3 The Whole Game", " 3 The Whole Game "]
]
